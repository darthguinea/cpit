#!/usr/bin/python

import sys
import getopt
import logging
import json, urllib
from sjcl import SJCL


def usage_options():
  WHITE = '\033[1m'
  RESET = '\033[0m'
  print ''
  print '\t{0}cpit:{1} '.format(WHITE, RESET)
  print ''
  sys.exit(1)


def establish_logger(level=False):
	logging.basicConfig(format='[%(asctime)s] [%(levelname)s]: %(message)s', datefmt='%d/%m/%Y %I:%M:%S')
	log = logging.getLogger()
	if level is True:
		log.setLevel(logging.DEBUG)
	else:
		log.setLevel(logging.FATAL)
	return log


def copy_from_stdin():
  data = None
  try:
    data = SJCL().encrypt(sys.stdin.read(), "shared_secret")
  except KeyboardInterrupt:
    sys.exit(1)
  return data


def get_paste(log):
	data = None
	url = "http://localhost:80"

	log.error('wtf')

	try:
		response = urllib.urlopen(url)
		data = json.loads(response.read())
		return SJCL().decrypt(data, "shared_secret")
	except IOError:
		log.error('Could not contact cpit server')
	except ValueError:
		log.error('Invalid server response')

	return None


def main(argv):
  log = establish_logger(False)

  try:
    opts, args = getopt.getopt(argv, "?v", ["help", "verbose"])
  except getopt.GetoptError:
    usage_options()

  for opt, arg in opts:
    if opt in ('-?', '--help'):
      usage_options()
    elif opt in ('-f', '--file'):
      filename = arg
    elif opt in ('-v', '--verbose'):
      log = establish_logger(True)

  # Copy from stdin:
  if sys.stdin.isatty() is False:
    data = copy_from_stdin()
    log.info(data)
  else:
    print get_paste(log)


if __name__ == "__main__":
  main(sys.argv[1:])

